name: CI

on: 
  # push: -- just run on PRs for now
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:13-3.0
        env:
          POSTGRES_PASSWORD: postgis
          POSTGRES_DB: arches_rdm_example_project
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    outputs:
      coverage-report-path: ${{ steps.generate-coverage-report.outputs.coverage-report-path }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install Java, GDAL, and other system dependencies
        run: |
          sudo apt update
          sudo apt-get install libxml2-dev libpq-dev openjdk-8-jdk libgdal-dev libxslt-dev
          echo Postgres and ES dependencies installed

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install -r arches_rdm_example_project/install/requirements.txt
          pip install -r arches_rdm_example_project/install/requirements_dev.txt
          echo Python packages installed

      - uses: ankane/setup-elasticsearch@v1
        with:
          elasticsearch-version: 8

      - name: Check for missing migrations
        run: |
          python manage.py makemigrations --check

      - name: Run unit tests
        run: |
          python -W default::DeprecationWarning -m coverage run manage.py test tests --pattern="*.py" --settings="tests.test_settings"

      - name: Report coverage
        run: |
          coverage report
          coverage report -m > coverage_report.txt
        env:
          COVERAGE_REPORT_PATH: coverage_report.txt

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage_report.txt

  update-coverage:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use the latest available version
          check-latest: true

      - name: Download coverage report artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage-report
          path: ./
        
      - name: Read coverage report
        run: |
          COVERAGE_REPORT_PATH=$(find . -name 'coverage_report.txt' -type f)
          echo "COVERAGE_REPORT_PATH=$COVERAGE_REPORT_PATH" >> $GITHUB_ENV

      - name: Set up environment
        run: |
          export COVERAGE_REPORT=$(cat $COVERAGE_REPORT_PATH)

      - name: Retrieve baseline coverage
        run: |
          git fetch origin main:main
          baseline_coverage=$(git show main:coverage.json | grep -o '"totals": {[^}]*' | grep -o '"percent_covered": [0-9.]*' | awk -F ': ' '{print $2}')
          echo "$baseline_coverage" > .coverage_baseline
  
      - name: Compare coverage with baseline
        if: github.event_name == 'pull_request'
        run: |
          echo "COVERAGE_REPORT: $COVERAGE_REPORT"
          current_coverage=$(echo "$COVERAGE_REPORT" | grep TOTAL | awk '{print int($4)}' | sed 's/%//')
          baseline_coverage=$(cat .coverage_baseline)
          baseline_coverage=$(printf "%.0f" "$baseline_coverage")
          if [[ "$current_coverage" -lt "$baseline_coverage" ]]; then
            echo "Coverage decreased from $baseline_coverage% to $current_coverage%"
            exit 1
          else
            echo "Coverage didn't decrease. Committing new coverage.json."
            coverage json

            git config user.name github-actions
            git config user.email github-actions@github.com

            git add coverage.json
            git add .coverage

            git commit -m "automatically update .coverage and coverage.json"

            git push -f origin HEAD:${{ github.event.pull_request.head.ref }}
          fi
